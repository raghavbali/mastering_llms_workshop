{
  "header": {
    "title": "Large Language Model Training Lifecycle",
    "subtitle": "Complete overview of LLM training methods and approaches",
    "themeToggle": {
      "text": "🌓 Toggle Theme",
      "id": "themeToggle"
    }
  },
  "summary": {
    "title": "📊 Training Pipeline Overview",
    "stages": [
      {
        "id": "pretraining",
        "icon": "🤖",
        "text": "Pre-training"
      },
      {
        "id": "branching",
        "icon": "🔀",
        "text": "Post-Training Paths",
        "special": "branching-box"
      },
      {
        "id": "branches",
        "type": "branch-group",
        "stages": [
          {
            "id": "branching",
            "icon": "🎯",
            "text": "Task-Specific Fine-tuning"
          },
          {
            "id": "branching",
            "icon": "📝",
            "text": "Instruction Tuning"
          }
        ]
      },
      {
        "id": "branching",
        "icon": "⚖️",
        "text": "Alignment Methods"
      },
      {
        "id": "applications",
        "icon": "🚀",
        "text": "Applications"
      }
    ]
  },
  "phases": {
    "title": "<br/>🔍 Detailed Training Phases",
    "phases": [
      {
        "id": "pretraining",
        "title": "🤖 Phase 1: Pre-training",
        "badge": {
          "text": "Foundation",
          "class": "foundation"
        },
        "collapsed": true,
        "info": [
          {
            "label": "📥 Input:",
            "value": "Raw internet text (10T+ tokens)"
          },
          {
            "label": "📤 Output:",
            "value": "Base language model with general understanding"
          },
          {
            "label": "⏱️ Time:",
            "value": "3 months (90-100 days)"
          },
          {
            "label": "🖥️ Compute:",
            "value": "25,000 NVIDIA A100 GPUs"
          },
          {
            "label": "🎯 Objective:",
            "value": "Learn fundamental language patterns through next-token prediction"
          },
          {
            "label": "👨🏻‍💻 Hands-on:",
            "value": "<ul><li><a href=\"module_01_lm_fundamentals/01_text_representation.ipynb\">Text Representation</a></li><li><a href=\"module_01_lm_fundamentals/02_contextual_embeddings.ipynb\">Contextual Embeddings</a></li><li><a href=\"module_02_llm_building_blocks/01_transformers.ipynb\">Transformers</a></li><li><a href=\"module_02_llm_building_blocks/03_training_language_models.ipynb\">Training Language Models</a></li></ul>"
          }
        ]
      },
      {
        "id": "branching",
        "title": "🔀 Phase 2: Post Training",
        "badge": {
          "text": "Decision Point",
          "class": "branching"
        },
        "collapsed": true,
        "description": "After pre-training, models can follow two main paths based on the intended use case:",
        "branches": [
          {
             "id": "task-specific",
            "title": "🎯 Path A: Task-Specific Fine-tuning",
            "class": "task-specific",
            "info": [
              {
                "label": "📥 Input:",
                "value": "Task-specific labeled data (1K-100K examples)"
              },
              {
                "label": "📤 Output:",
                "value": "Specialized Models/Task-Tuned Models for classification, Q&A, summarization, etc."
              },
              {
                "label": "⏱️ Time:",
                "value": "1-2 weeks"
              },
              {
                "label": "🖥️ Compute:",
                "value": "100+ GPUs"
              },
              {
                "label": "🎯 Objective:",
                "value": "Adapt for specific downstream tasks"
              },
              {
                "label": "📋 Examples:",
                "value": "Text classification, sentiment analysis, question answering, translation, summarization"
              },
              {
                "label": "👨🏻‍💻 Hands-on:",
                "value": "<ul><li><a href=\"module_02_llm_building_blocks/02_transformers_pipelines.ipynb\">Transformer Pipelines</a></li></ul>"
              }
            ]
          },
          {
            "title": "📝 Path B: Instruction Tuning Path",
            "steps": [
              {
                "title": "📚 Step 1: Supervised Fine-tuning (SFT)",
                "class": "instruction-sft",
                "info": [
                  {
                    "label": "📥 Input:",
                    "value": "Instruction-response pairs (10K-100K examples)"
                  },
                  {
                    "label": "📤 Output:",
                    "value": "Instruction-following model"
                  },
                  {
                    "label": "⏱️ Time:",
                    "value": "1-2 weeks"
                  },
                  {
                    "label": "🖥️ Compute:",
                    "value": "1000-10,000 GPUs"
                  },
                  {
                    "label": "🎯 Objective:",
                    "value": "Teach model to follow general instructions"
                  },
                  {
                    "label": "👨🏻‍💻 Hands-on:",
                    "value": "<ul><li><a href=\"module_03_instruction_tuning_and_alignment/01_instruction_tuning_llama_txt2py.ipynb\">Instruction Tuning LLaMA</a></li></ul>"
                  }
                ]
              },
              {
                "title": "⚖️ Step 2: Alignment Methods",
                "hasMethodTabs": true,
                "methods": [
                  {
                    "id": "rlhf",
                    "name": "RLHF",
                    "fullName": "RLHF (Reinforcement Learning from Human Feedback)",
                    "year": "2022",
                    "complexity": "high",
                    "complexityText": "High Complexity",
                    "class": "rlhf",
                    "active": true,
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "Human preference rankings (1K-10K pairs)"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "3-stage (SFT → Reward Model → PPO)"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Human-aligned responses, proven effectiveness"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "Complex, expensive, requires human feedback"
                      },
                      {
                        "label": "👨🏻‍💻 Hands-on:",
                        "value": "<ul><li><a href=\"module_03_instruction_tuning_and_alignment/02_RLHF_phi2.ipynb\">RLHF</a></li></ul>"
                      }
                    ]
                  },
                  {
                    "id": "dpo",
                    "name": "DPO",
                    "fullName": "DPO (Direct Preference Optimization)",
                    "year": "2023",
                    "complexity": "medium",
                    "complexityText": "Medium Complexity",
                    "class": "dpo",
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "Preference pairs (chosen/rejected)"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "2-stage (SFT → Direct optimization)"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Simpler than RLHF, no reward model needed"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "Still requires preference data"
                      },
                      {
                        "label": "👨🏻‍💻 Hands-on:",
                        "value": "<ul><li><a href=\"module_03_instruction_tuning_and_alignment/01_instruction_tuning_llama_txt2py.ipynb\">DPO Gemma</a></li></ul>"
                      }
                    ]
                  },
                  {
                    "id": "orpo",
                    "name": "ORPO",
                    "fullName": "ORPO (Odds Ratio Preference Optimization)",
                    "year": "2024",
                    "yearClass": "new",
                    "complexity": "low",
                    "complexityText": "Low Complexity",
                    "class": "orpo",
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "Preference pairs"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "1-stage (combines SFT and alignment)"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Single-step process, no reference model needed"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "Newer method, less tested"
                      }
                    ]
                  },
                  {
                    "id": "rlaif",
                    "name": "RLAIF",
                    "fullName": "RLAIF (Reinforcement Learning from AI Feedback)",
                    "year": "2023",
                    "complexity": "medium",
                    "complexityText": "Medium Complexity",
                    "class": "rlaif",
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "AI-generated feedback"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "Similar to RLHF but with AI feedback"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Scalable, no human feedback needed"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "Dependent on AI evaluator quality"
                      }
                    ]
                  },
                  {
                    "id": "constitutional",
                    "name": "Constitutional",
                    "fullName": "Constitutional AI",
                    "year": "2022",
                    "complexity": "medium",
                    "complexityText": "Medium Complexity",
                    "class": "constitutional",
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "Self-critique with constitution rules"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "2-stage (Self-improvement → RL with AI feedback)"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Transparent principles, self-supervised"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "Rule design required"
                      }
                    ]
                  },
                  {
                    "id": "grpo",
                    "name": "GRPO",
                    "fullName": "Group Relative Policy Optimization",
                    "year": "2025",
                    "complexity": "high",
                    "complexityText": "High Complexity",
                    "class": "deepseek",
                    "info": [
                      {
                        "label": "📥 Input:",
                        "value": "Seeded with 1k CoT examples(``<think>``) followed by self-generated responses"
                      },
                      {
                        "label": "🔄 Process:",
                        "value": "Multi-stage (Coldstart CoT → GRPO with Rule based verfication → Post Alignment)"
                      },
                      {
                        "label": "✅ Pros:",
                        "value": "Improved reasoning capabilities, better at math and coding"
                      },
                      {
                        "label": "❌ Cons:",
                        "value": "CoT dataset preparation and reward verification quality"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "applications",
        "title": "🚀 Phase 3: LLM Based Applications",
        "badge": {
          "text": "Live System",
          "class": "production"
        },
        "collapsed": true,
        "info": [
          {
            "label": "📥 Input:",
            "value": "Aligned model from chosen method → Safety Guardrails & Red Teaming → Quantization & Distillation as needed"
          },
          {
            "label": "📤 Output:",
            "value": "Production-ready LLM"
          },
          {
            "label": "🔄 Ongoing:",
            "value": "Evaluation, monitoring, updates"
          },
          {
            "label": "👨🏻‍💻 Hands-on:",
            "value": "<ul><li><a href=\"module_04_llm_ops/04_retrieval_augmented_llm_app.ipynb\">RAG</a></li><li><a href=\"module_04_llm_ops/05_dspy_demo.ipynb\">DSPy</a></li></ul>"
          }
        ]
      }
    ]
  },
  "timeline": {
    "title": "📅 Evolution Timeline",
    "items": [
      {
        "year": "2018",
        "content": "<b>Task-Specific Fine-tuning</b>: <i>BERT, GPT</i>"
      },
      {
        "year": "2019",
        "content": "<b>Large-Scale Pre-training</b>: <i>GPT-2, T5</i>"
      },
      {
        "year": "2021",
        "content": "<b>Instruction Tuning (SFT)</b>: <i> FLAN, Instruct-GPT</i>"
      },
      {
        "year": "2022",
        "content": "<b>RLHF</b>: <i>GPT-3.5/ChatGPT, LLaMA</i>"
      },
      {
        "year": "2023",
        "content": "<b>DPO</b>: <i> LLaMA2, MS-Phi, GPT4, Gemini</i>"
      },
      {
        "year": "2024",
        "content": "<b>ORPO</b>: <i> Claude 3.5, LLaMA-3, GPT-4o</i>"
      },
      {
        "year": "2025",
        "content": "<b>GRPO</b>: <i>DeepSeek, Claude-4/Opus</i>"
      }
    ]
  }
}